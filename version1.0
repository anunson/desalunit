#!/usr/bin/python3
import RPi.GPIO as io
import time #not using it, just here incase it is wanted to be used. maybe in another code. 

io.setwarnings(False)
io.setmode(io.BCM)
setuplib = {'recycle':19, 'waste':20, 'product':26, 'adsorb':13, 'desorb':21, 'pump':16}
#assigning cycle to the GPIO pins

str = "help"
globals()[str] = "\nAdsorb will let the system start adsorbing \nDesorb will let the system start desorbing \nRecycle will let the system start recycling the water \nExit will kill the system and shut down the code\n" 
#this is to print out the help function

def clear():
	for key in setuplib:
		io.setup(setuplib[key], io.OUT)
		io.output(setuplib[key],1)
clear()

print("\n", "Choose a cycle","\n", "Adsorb, Desorb, Recycle, Help, Exit", "\n")

while True:
	try:
		cycle = input("Choose a cycle to start | ")
		if cycle == 'desorb':
			clear()
			io.output(setuplib['waste'],0)
			io.output(setuplib['pump'],0)
			io.output(setuplib['desorb'],0)
			print("\n" " Shunt", "\n")

		if cycle == 'adsorb':
			clear()
			io.output(setuplib['product'],0)
			io.output(setuplib['pump'],0)
			io.output(setuplib['adsorb'],0)
			print("\n", "Adsorbing", "\n")

		if cycle == 'recycle':
			clear()
			io.output(setuplib['recycle'],0)
			io.output(setuplib['pump'],0)
			print("\n", "Recycling", "\n")

		if cycle == "":
			clear()
			print("\n", "Standby", "\n")

		if cycle == 'help':
			print(help)

		if cycle == "exit":
			exit()
			
	except:
		print("\n", "Killing", "\n")
		io.cleanup()
		exit()

#being able to adjust and create structure from the terminal
#using time.sleep in the test 
#let's go

